// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/product-service.proto

/*
Package product is a generated protocol buffer package.

It is generated from these files:
	proto/v1/product-service.proto

It has these top-level messages:
*/
package product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto_v1_model_product "finalProject/cmd/service/grpc-model/product"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProductService service

type ProductServiceClient interface {
	Add(ctx context.Context, in *proto_v1_model_product.AddReq, opts ...grpc.CallOption) (*proto_v1_model_product.AddRes, error)
	Delete(ctx context.Context, in *proto_v1_model_product.DeleteReq, opts ...grpc.CallOption) (*proto_v1_model_product.DeleteRes, error)
	Update(ctx context.Context, in *proto_v1_model_product.UpdateReq, opts ...grpc.CallOption) (*proto_v1_model_product.UpdateRes, error)
	Get(ctx context.Context, in *proto_v1_model_product.GetReq, opts ...grpc.CallOption) (*proto_v1_model_product.GetRes, error)
}

type productServiceClient struct {
	cc *grpc.ClientConn
}

func NewProductServiceClient(cc *grpc.ClientConn) ProductServiceClient {
	return &productServiceClient{cc}
}

func (c *productServiceClient) Add(ctx context.Context, in *proto_v1_model_product.AddReq, opts ...grpc.CallOption) (*proto_v1_model_product.AddRes, error) {
	out := new(proto_v1_model_product.AddRes)
	err := grpc.Invoke(ctx, "/proto.v1.productService.ProductService/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) Delete(ctx context.Context, in *proto_v1_model_product.DeleteReq, opts ...grpc.CallOption) (*proto_v1_model_product.DeleteRes, error) {
	out := new(proto_v1_model_product.DeleteRes)
	err := grpc.Invoke(ctx, "/proto.v1.productService.ProductService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) Update(ctx context.Context, in *proto_v1_model_product.UpdateReq, opts ...grpc.CallOption) (*proto_v1_model_product.UpdateRes, error) {
	out := new(proto_v1_model_product.UpdateRes)
	err := grpc.Invoke(ctx, "/proto.v1.productService.ProductService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) Get(ctx context.Context, in *proto_v1_model_product.GetReq, opts ...grpc.CallOption) (*proto_v1_model_product.GetRes, error) {
	out := new(proto_v1_model_product.GetRes)
	err := grpc.Invoke(ctx, "/proto.v1.productService.ProductService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProductService service

type ProductServiceServer interface {
	Add(context.Context, *proto_v1_model_product.AddReq) (*proto_v1_model_product.AddRes, error)
	Delete(context.Context, *proto_v1_model_product.DeleteReq) (*proto_v1_model_product.DeleteRes, error)
	Update(context.Context, *proto_v1_model_product.UpdateReq) (*proto_v1_model_product.UpdateRes, error)
	Get(context.Context, *proto_v1_model_product.GetReq) (*proto_v1_model_product.GetRes, error)
}

func RegisterProductServiceServer(s *grpc.Server, srv ProductServiceServer) {
	s.RegisterService(&_ProductService_serviceDesc, srv)
}

func _ProductService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto_v1_model_product.AddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.productService.ProductService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).Add(ctx, req.(*proto_v1_model_product.AddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto_v1_model_product.DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.productService.ProductService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).Delete(ctx, req.(*proto_v1_model_product.DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto_v1_model_product.UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.productService.ProductService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).Update(ctx, req.(*proto_v1_model_product.UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto_v1_model_product.GetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.productService.ProductService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).Get(ctx, req.(*proto_v1_model_product.GetReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.v1.productService.ProductService",
	HandlerType: (*ProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ProductService_Add_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ProductService_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ProductService_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ProductService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/product-service.proto",
}

func init() { proto.RegisterFile("proto/v1/product-service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x33, 0xd4, 0x2f, 0x28, 0xca, 0x4f, 0x29, 0x4d, 0x2e, 0xd1, 0x2d, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x03, 0x4b, 0x08, 0x89, 0x83, 0x29, 0xbd, 0x32, 0x43, 0x3d, 0xa8,
	0x7c, 0x30, 0x44, 0x5a, 0x4a, 0x05, 0xae, 0x31, 0x37, 0x3f, 0x25, 0x35, 0x07, 0xa6, 0x1d, 0x46,
	0x43, 0xb4, 0x1b, 0xed, 0x63, 0xe2, 0xe2, 0x0b, 0x40, 0xd1, 0x28, 0xe4, 0xca, 0xc5, 0xec, 0x98,
	0x92, 0x22, 0x24, 0xa7, 0x07, 0x37, 0x19, 0x6c, 0x00, 0xcc, 0x7c, 0x3d, 0xc7, 0x94, 0x94, 0xa0,
	0xd4, 0x42, 0x29, 0xfc, 0xf2, 0xc5, 0x42, 0x7e, 0x5c, 0x6c, 0x2e, 0xa9, 0x39, 0xa9, 0x25, 0xa9,
	0x42, 0x8a, 0xb8, 0x54, 0x42, 0xe4, 0x41, 0x86, 0x11, 0x54, 0x02, 0x36, 0x2f, 0xb4, 0x20, 0x25,
	0x11, 0x9f, 0x79, 0x10, 0x79, 0xbc, 0xe6, 0xc1, 0x94, 0x14, 0x83, 0xbc, 0xe9, 0x9e, 0x5a, 0x82,
	0xdb, 0x9b, 0xee, 0xa9, 0x25, 0x78, 0xbd, 0x09, 0x96, 0x2f, 0x76, 0x12, 0x8c, 0xe2, 0x87, 0x46,
	0x08, 0x2c, 0x64, 0x93, 0xd8, 0xc0, 0x3a, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x67,
	0xb9, 0x8e, 0xbb, 0x01, 0x00, 0x00,
}
